var S=Object.defineProperty;var p=(o,e,t)=>e in o?S(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var c=(o,e,t)=>(p(o,typeof e!="symbol"?e+"":e,t),t);import{r as R,f as h}from"./index-f38d4d77.js";const g=["KRW-BTC","KRW-ETH","KRW-NEO","KRW-MTL","KRW-XRP","KRW-ETC","KRW-SNT","KRW-WAVES","KRW-XEM","KRW-QTUM","KRW-LSK","KRW-STEEM","KRW-XLM","KRW-ARDR","KRW-ARK","KRW-STORJ","KRW-GRS","KRW-ADA","KRW-SBD","KRW-POWR","KRW-BTG","KRW-ICX","KRW-EOS","KRW-TRX","KRW-SC","KRW-ONT","KRW-ZIL","KRW-POLYX","KRW-ZRX","KRW-LOOM","KRW-BCH","KRW-BAT","KRW-IOST","KRW-CVC","KRW-IQ","KRW-IOTA","KRW-HIFI","KRW-ONG","KRW-GAS","KRW-UPP","KRW-ELF","KRW-KNC","KRW-BSV","KRW-THETA","KRW-QKC","KRW-MOC","KRW-TFUEL","KRW-MANA","KRW-ANKR","KRW-AERGO","KRW-ATOM","KRW-TT","KRW-CRE","KRW-MBL","KRW-WAXP","KRW-HBAR","KRW-MED","KRW-MLK","KRW-STPT","KRW-ORBS","KRW-VET","KRW-CHZ","KRW-STMX","KRW-DKA","KRW-HIVE","KRW-KAVA","KRW-AHT","KRW-LINK","KRW-XTZ","KRW-BORA","KRW-JST","KRW-CRO","KRW-TON","KRW-SXP","KRW-HUNT","KRW-PLA","KRW-DOT","KRW-MVL","KRW-STRAX","KRW-AQT","KRW-GLM","KRW-SSX","KRW-META","KRW-FCT2","KRW-CBK","KRW-SAND","KRW-HPO","KRW-DOGE","KRW-STRK","KRW-PUNDIX","KRW-FLOW","KRW-AXS","KRW-STX","KRW-XEC","KRW-SOL","KRW-MATIC","KRW-AAVE","KRW-1INCH","KRW-ALGO","KRW-NEAR","KRW-AVAX","KRW-T","KRW-CELO","KRW-GMT","KRW-APT","KRW-SHIB","KRW-MASK","KRW-ARB","KRW-EGLD","KRW-SUI","KRW-GRT","KRW-BLUR","KRW-IMX","KRW-SEI","KRW-MINA"];class k{constructor(e){c(this,"ws",null);c(this,"updateFunctions",[]);c(this,"dataDictionary",{});c(this,"coinsData",{});c(this,"tickersRaw",g);c(this,"dataSettings",e=>{const t=e.code;if(this.tickersRaw.includes(t)){const r=e.highest_52_week_price,a=e.lowest_52_week_price,s=e.trade_price,i=(s-r)/r*100,K=(s-a)/a*100;let l=(K-100).toFixed(2),n=100+i;return e.H52=i,e.L52=K,e.DP52=parseFloat(l)+n,this.coinsData[t]=e,new Map(Object.entries(this.coinsData))}return null});e&&this.updateFunctions.push(e)}registerUpdateFunction(e){this.updateFunctions.push(e)}async handleWebSocketMessageIn(e){try{const t=await e.data.text(),r=JSON.parse(t);r&&typeof r=="object"?this.updateFunctions.forEach(a=>a(this.dataSettings(r))):console.error("Invalid data structure:",r)}catch(t){console.error("Error parsing WebSocket message:",t)}}async setupWebSocket(e){try{this.ws?console.warn("WebSocket already initialized. Ignoring setup request."):(this.ws=new WebSocket("wss://api.upbit.com/websocket/v1"),this.ws.onopen=()=>{setTimeout(async()=>{this.ws&&this.ws.readyState===WebSocket.OPEN?this.ws.send(JSON.stringify([{ticket:"test"},{type:"ticker",codes:this.tickersRaw}])):console.error(`WebSocket not in OPEN state. Unable to send data. ${e}`)},1)},this.ws.onclose=t=>{setTimeout(()=>{this.setupWebSocket(e),console.log(`Reconnect: ${e}`,t)},1111),this.ws=null},this.ws.onmessage=t=>{this.ws&&this.ws.readyState===WebSocket.OPEN?this.handleWebSocketMessageIn(t):console.error(`WebSocket not in OPEN state. Unable to process incoming message. ${e}`)})}catch(t){console.error(t)}}}const u=new k,W=class W{constructor(e,t,r,a,s,i){c(this,"countSignedChangeRate",e=>{const t=e.filter(([,a])=>a.signed_change_rate>0).length,r=e.filter(([,a])=>a.signed_change_rate<0).length;return{greaterThanZeroCount:t,lessThanZeroCount:r}});c(this,"sortValuesBy",(e,t)=>e.filter(([,r])=>r!==void 0).sort((r,a)=>{const s=a[1][this.reqCall]-r[1][this.reqCall];return t==="asc"?s:-s}));c(this,"updateWsData",e=>{if(!e){console.warn("Received undefined data. Ignoring update.");return}try{const t=Object.fromEntries(this.keysToRetrieve.map(a=>[a,e.get(a)]));let r=this.sortValuesBy(Object.entries(t),this.typesort);r=this.sliceSortedValues(r),this.sortedWsData.value=Object.fromEntries(r),this.keysOnlyData.value=Object.keys(this.sortedWsData.value),this.valueOnlyData.value=Object.values(this.sortedWsData.value),this.rawdata.value=Object.values(this.sortedWsData.value)}catch(t){console.error("Error processing WebSocket data:",t)}});c(this,"setupWebSocket",e=>new Promise(t=>{this.isWebSocketSetup?t():u.setupWebSocket(e).then(()=>{this.isWebSocketSetup=!0,t()})}));this.keysToRetrieve=e,this.compname=t,this.reqCall=r,this.typesort=a,this.rankea=s,this.startpos=i,this.sortedWsData=R([]),this.isWebSocketSetup=!1,this.keysOnlyData=R([]),this.valueOnlyData=R([]),this.updateWsData=this.updateWsData.bind(this),this.rawdata=R(),this.pncnt=R(),u.registerUpdateFunction(this.updateWsData),W.isWebSocketInitialized||(this.setupWebSocket(r),W.isWebSocketInitialized=!0)}createFall(e,t){return h(()=>{const a=(this.rawdata.value?this.rawdata.value.filter(s=>e.includes(s==null?void 0:s.code)):[]).filter(s=>(s==null?void 0:s.signed_change_rate)*100<t);return{changeBelow:t,state:a.length,tickerMap:a.map(s=>s),ticker:a.map(s=>s.code)}})}createRise(e,t){return h(()=>{const a=(this.rawdata.value?this.rawdata.value.filter(s=>e.includes(s==null?void 0:s.code)):[]).filter(s=>(s==null?void 0:s.signed_change_rate)*100>t);return{changeUnder:t,state:a.length,tickerMap:a.map(s=>s),ticker:a.map(s=>s.code)}})}createPNCnt(e,t,r){return h(()=>{const a=this.rawdata.value?this.rawdata.value.filter(n=>e.includes(n==null?void 0:n.code)):[],s=a.filter(n=>(n==null?void 0:n.signed_change_rate)*100>=t),i=a.filter(n=>(n==null?void 0:n.signed_change_rate)*100<r);let K=`Rise rate upper ${t}`,l=`Fall rate under ${r}`;return{Rise:s.length,Fall:i.length,ticker:{[K]:s.map(n=>n.code),[l]:i.map(n=>n.code)}}})}sliceSortedValues(e){const t=this.keysToRetrieve.length;return this.rankea>=0&&t>0?Object.values(e).slice(this.startpos,this.startpos+this.rankea):this.rankea<0?Object.values(e).slice(this.rankea):Object.values(e)}};c(W,"isWebSocketInitialized",!1);let d=W;const D=(o,e,t,r,a,s)=>{const i=new d(o,e,t,r,a,s);return{sortedWsData:i.sortedWsData,keysOnlyData:i.keysOnlyData,valueOnlyData:i.valueOnlyData,rawdata:i.rawdata,updateWsData:i.updateWsData}};export{d as W,g as r,D as u};
