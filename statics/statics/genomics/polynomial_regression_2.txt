2차 다항 회귀(Polynomial Regression 2)는 종속 변수와 독립 변수 사이의 관계를 2차 다항식 형태로 모델링하는 방법입니다. 유전체 분석에서 흔히 사용되는 경우는 유전자 발현 수준과 특정 변이(예: SNP) 혹은 환경 요인 사이의 비선형 관계를 탐색할 때입니다.

핵심 개념:
- 모델식: y = β0 + β1·x + β2·x^2 + ε, 여기서 x는 입력 특성(예: 변이 빈도), y는 목표 변수(예: 발현량)
- 다항 항 추가로 선형 회귀보다 복잡한 곡선 형태를 표현 가능
- 과적합 방지를 위해 정규화(L2 Ridge, L1 Lasso) 사용 권장

유전체 데이터 적용 절차:
1. 데이터 전처리: 결측값 제거, 정규화(z-score) 수행
2. 특징 선택: 관심 유전자 혹은 변이 위치 선정
3. 다항 특징 생성: sklearn.preprocessing.PolynomialFeatures(degree=2) 활용
4. 모델 학습: LinearRegression 혹은 Ridge, Lasso 적용
5. 평가: 교차검증(R², MSE) 및 시각화(예측값 vs 실제값)

파이썬 구현 예시 (코드 블록 없이 순수 텍스트):
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import Ridge
from sklearn.metrics import r2_score, mean_squared_error

# 데이터 로드
df = pd.read_csv('genomics_data.csv')
X = df[['snp_frequency']].values
y = df['gene_expression'].values

# 학습/테스트 분리
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 2차 다항 변환
poly = PolynomialFeatures(degree=2, include_bias=False)
X_train_poly = poly.fit_transform(X_train)
X_test_poly = poly.transform(X_test)

# Ridge 회귀 모델 학습
model = Ridge(alpha=1.0)
model.fit(X_train_poly, y_train)

# 예측 및 평가
y_pred = model.predict(X_test_poly)
print('R2:', r2_score(y_test, y_pred))
print('MSE:', mean_squared_error(y_test, y_pred))

해석 포인트:
- β2(이차항 계수)의 부호와 크기는 비선형 효과의 방향과 강도를 나타냅니다.
- 계수에 통계적 유의성을 부여하려면 bootstrapping 혹은 베이지안 회귀를 활용할 수 있습니다.
- 다중 유전자/다중 변이를 동시에 분석하려면 다변량 다항 회귀 또는 Lasso를 통해 변수 선택을 병행하세요.

주의 사항:
- 고차항은 데이터가 충분히 많을 때만 안정적인 추정이 가능하므로, 샘플 수가 적은 경우 차수를 낮추거나 정규화를 강화하세요.
- 유전체 데이터는 종종 높은 차원의 특성을 가지므로 차원 축소(PCA)와 결합해 모델 복잡도를 조절하는 것이 좋습니다.